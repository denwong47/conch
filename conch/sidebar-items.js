window.SIDEBAR_ITEMS = {"constant":[["DEFAULT_SEPARATOR","Default `sep` to use for [`ANSIEscapeCode`]."]],"enum":[["Background","An Enum for ANSI 256-colour codes."],["Colour","An Enum for ANSI 256-colour codes."],["Intensity","Intensity modifier"],["Modifier","Unified [`Modifier`] enum type."],["ModifierError","A enum of possible error types during modifier operations."],["MoveCursor","Move the position of the current cursor in the terminal."]],"macro":[["ansi_enum_builder","An internal helper macro that builds all the auto implementations for enum classes in `conch_ansi`."],["s","A simple macro allowing string literals to be broken across lines without affecting indentation, like Python strings."]],"mod":[["config",""],["func",""],["prelude","A subset of structs, enums and traits that are more likely required at import."],["regions",""]],"struct":[["ANSIEscapeCode","A basic dataclass of a deconstructed `\\x1b[00;00;..m` structure."],["BackgroundIter","An iterator over the variants of [Self]"],["CalendarMonth","A struct to display a month on a calendar in stdout."],["ColourIter","An iterator over the variants of [Self]"],["DEFAULT_HOLIDAY_MODIFIER",""],["DEFAULT_OTHER_MONTH_MODIFIER",""],["DEFAULT_TITLE_MODIFIER",""],["DEFAULT_WEEKDAY_MODIFIER",""],["DEFAULT_WEEK_STARTS_WITH",""],["ESCAPE_CODE_PATTERN","[`Regex`] pattern for an escape code anywhere within a given text."],["ESCAPE_CODE_START_PATTERN","[`Regex`] pattern for an escape code leading a given text."],["Holidays","Structs for static method to list public holidays of a region in a specific year."],["IntensityIter","An iterator over the variants of [Self]"],["Lines","A wrapper around [`Vec<String>`] to provide more control over display."],["ModifiersInText",""],["MoveCursorIter","An iterator over the variants of [Self]"],["RangeWithoutModifiers",""],["SEP_PATTERN","[`Regex`] pattern for any valid separators - namely `:` and `;`."],["StepsOverRange","Iterator struct to step over a [`Range`] or [`RangeInclusive`] of time values that supports [`std::ops::Add`] [`Duration`]"]],"trait":[["ContainsDate","Trait to check if a date is within another struct of object, presumably a range of dates."],["FindModifiers","Trait for [`str`] and [`String`] to iterate its modifiers."],["HasLength","Custom Trait for anything that have a `len`."],["HolidayList","Trait for structs that can output a structure"],["IntoANSIEscapeCode","Custom Trait for anything that can be converted into [`ANSIEscapeCode`]."],["IterRangeByDuration","Trait to allow a [`Range<Idx>`] or [`RangeInclusive<Idx>`] of time values to produce an [`Iterator<Idx>`] which steps over the range by a specified [`Duration`]."],["LastWeekdayOfMonth","Trait for adding `last_weekday_of_month_opt` method to `NaiveDate`."],["LengthWithoutModifiers",""],["NextWeekdayFromDate","Trait for adding `last_weekday_of_month_opt` method to `NaiveDate`."],["RegionMarker","Marker Trait for a Region."],["Resetter","Trait for anything that has a resetter method."],["StringWrapper","Auto trait for structs and enums that can wrap a string."]]};