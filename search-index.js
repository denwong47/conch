var searchIndex = JSON.parse('{\
"conch":{"doc":"Conch - pretty <code>shell</code>","tn":["ANSIEscapeCode","Background","Background","BackgroundIter","BadCapturesGroup","BadRegexPattern","Black","Black","Blue","Blue","Bold","BrightBlack","BrightBlack","BrightBlue","BrightBlue","BrightCyan","BrightCyan","BrightGreen","BrightGreen","BrightMagenta","BrightMagenta","BrightRed","BrightRed","BrightWhite","BrightWhite","BrightYellow","BrightYellow","Colour","Colour","ColourIter","Combo","Cyan","Cyan","DEFAULT_SEPARATOR","ESCAPE_CODE_PATTERN","ESCAPE_CODE_START_PATTERN","Faint","Grayscale00","Grayscale00","Grayscale01","Grayscale01","Grayscale02","Grayscale02","Grayscale03","Grayscale03","Grayscale04","Grayscale04","Grayscale05","Grayscale05","Grayscale06","Grayscale06","Grayscale07","Grayscale07","Grayscale08","Grayscale08","Grayscale09","Grayscale09","Grayscale10","Grayscale10","Grayscale11","Grayscale11","Grayscale12","Grayscale12","Grayscale13","Grayscale13","Grayscale14","Grayscale14","Grayscale15","Grayscale15","Grayscale16","Grayscale16","Grayscale17","Grayscale17","Grayscale18","Grayscale18","Grayscale19","Grayscale19","Grayscale20","Grayscale20","Grayscale21","Grayscale21","Grayscale22","Grayscale22","Grayscale23","Grayscale23","Green","Green","Intensity","Intensity","IntensityIter","IntoANSIEscapeCode","Magenta","Magenta","MismatchedANSICode","MissingANSICode","Modifier","ModifierError","Normal","R0G0B0","R0G0B0","R0G0B1","R0G0B1","R0G0B2","R0G0B2","R0G0B3","R0G0B3","R0G0B4","R0G0B4","R0G0B5","R0G0B5","R0G1B0","R0G1B0","R0G1B1","R0G1B1","R0G1B2","R0G1B2","R0G1B3","R0G1B3","R0G1B4","R0G1B4","R0G1B5","R0G1B5","R0G2B0","R0G2B0","R0G2B1","R0G2B1","R0G2B2","R0G2B2","R0G2B3","R0G2B3","R0G2B4","R0G2B4","R0G2B5","R0G2B5","R0G3B0","R0G3B0","R0G3B1","R0G3B1","R0G3B2","R0G3B2","R0G3B3","R0G3B3","R0G3B4","R0G3B4","R0G3B5","R0G3B5","R0G4B0","R0G4B0","R0G4B1","R0G4B1","R0G4B2","R0G4B2","R0G4B3","R0G4B3","R0G4B4","R0G4B4","R0G4B5","R0G4B5","R0G5B0","R0G5B0","R0G5B1","R0G5B1","R0G5B2","R0G5B2","R0G5B3","R0G5B3","R0G5B4","R0G5B4","R0G5B5","R0G5B5","R1G0B0","R1G0B0","R1G0B1","R1G0B1","R1G0B2","R1G0B2","R1G0B3","R1G0B3","R1G0B4","R1G0B4","R1G0B5","R1G0B5","R1G1B0","R1G1B0","R1G1B1","R1G1B1","R1G1B2","R1G1B2","R1G1B3","R1G1B3","R1G1B4","R1G1B4","R1G1B5","R1G1B5","R1G2B0","R1G2B0","R1G2B1","R1G2B1","R1G2B2","R1G2B2","R1G2B3","R1G2B3","R1G2B4","R1G2B4","R1G2B5","R1G2B5","R1G3B0","R1G3B0","R1G3B1","R1G3B1","R1G3B2","R1G3B2","R1G3B3","R1G3B3","R1G3B4","R1G3B4","R1G3B5","R1G3B5","R1G4B0","R1G4B0","R1G4B1","R1G4B1","R1G4B2","R1G4B2","R1G4B3","R1G4B3","R1G4B4","R1G4B4","R1G4B5","R1G4B5","R1G5B0","R1G5B0","R1G5B1","R1G5B1","R1G5B2","R1G5B2","R1G5B3","R1G5B3","R1G5B4","R1G5B4","R1G5B5","R1G5B5","R2G0B0","R2G0B0","R2G0B1","R2G0B1","R2G0B2","R2G0B2","R2G0B3","R2G0B3","R2G0B4","R2G0B4","R2G0B5","R2G0B5","R2G1B0","R2G1B0","R2G1B1","R2G1B1","R2G1B2","R2G1B2","R2G1B3","R2G1B3","R2G1B4","R2G1B4","R2G1B5","R2G1B5","R2G2B0","R2G2B0","R2G2B1","R2G2B1","R2G2B2","R2G2B2","R2G2B3","R2G2B3","R2G2B4","R2G2B4","R2G2B5","R2G2B5","R2G3B0","R2G3B0","R2G3B1","R2G3B1","R2G3B2","R2G3B2","R2G3B3","R2G3B3","R2G3B4","R2G3B4","R2G3B5","R2G3B5","R2G4B0","R2G4B0","R2G4B1","R2G4B1","R2G4B2","R2G4B2","R2G4B3","R2G4B3","R2G4B4","R2G4B4","R2G4B5","R2G4B5","R2G5B0","R2G5B0","R2G5B1","R2G5B1","R2G5B2","R2G5B2","R2G5B3","R2G5B3","R2G5B4","R2G5B4","R2G5B5","R2G5B5","R3G0B0","R3G0B0","R3G0B1","R3G0B1","R3G0B2","R3G0B2","R3G0B3","R3G0B3","R3G0B4","R3G0B4","R3G0B5","R3G0B5","R3G1B0","R3G1B0","R3G1B1","R3G1B1","R3G1B2","R3G1B2","R3G1B3","R3G1B3","R3G1B4","R3G1B4","R3G1B5","R3G1B5","R3G2B0","R3G2B0","R3G2B1","R3G2B1","R3G2B2","R3G2B2","R3G2B3","R3G2B3","R3G2B4","R3G2B4","R3G2B5","R3G2B5","R3G3B0","R3G3B0","R3G3B1","R3G3B1","R3G3B2","R3G3B2","R3G3B3","R3G3B3","R3G3B4","R3G3B4","R3G3B5","R3G3B5","R3G4B0","R3G4B0","R3G4B1","R3G4B1","R3G4B2","R3G4B2","R3G4B3","R3G4B3","R3G4B4","R3G4B4","R3G4B5","R3G4B5","R3G5B0","R3G5B0","R3G5B1","R3G5B1","R3G5B2","R3G5B2","R3G5B3","R3G5B3","R3G5B4","R3G5B4","R3G5B5","R3G5B5","R4G0B0","R4G0B0","R4G0B1","R4G0B1","R4G0B2","R4G0B2","R4G0B3","R4G0B3","R4G0B4","R4G0B4","R4G0B5","R4G0B5","R4G1B0","R4G1B0","R4G1B1","R4G1B1","R4G1B2","R4G1B2","R4G1B3","R4G1B3","R4G1B4","R4G1B4","R4G1B5","R4G1B5","R4G2B0","R4G2B0","R4G2B1","R4G2B1","R4G2B2","R4G2B2","R4G2B3","R4G2B3","R4G2B4","R4G2B4","R4G2B5","R4G2B5","R4G3B0","R4G3B0","R4G3B1","R4G3B1","R4G3B2","R4G3B2","R4G3B3","R4G3B3","R4G3B4","R4G3B4","R4G3B5","R4G3B5","R4G4B0","R4G4B0","R4G4B1","R4G4B1","R4G4B2","R4G4B2","R4G4B3","R4G4B3","R4G4B4","R4G4B4","R4G4B5","R4G4B5","R4G5B0","R4G5B0","R4G5B1","R4G5B1","R4G5B2","R4G5B2","R4G5B3","R4G5B3","R4G5B4","R4G5B4","R4G5B5","R4G5B5","R5G0B0","R5G0B0","R5G0B1","R5G0B1","R5G0B2","R5G0B2","R5G0B3","R5G0B3","R5G0B4","R5G0B4","R5G0B5","R5G0B5","R5G1B0","R5G1B0","R5G1B1","R5G1B1","R5G1B2","R5G1B2","R5G1B3","R5G1B3","R5G1B4","R5G1B4","R5G1B5","R5G1B5","R5G2B0","R5G2B0","R5G2B1","R5G2B1","R5G2B2","R5G2B2","R5G2B3","R5G2B3","R5G2B4","R5G2B4","R5G2B5","R5G2B5","R5G3B0","R5G3B0","R5G3B1","R5G3B1","R5G3B2","R5G3B2","R5G3B3","R5G3B3","R5G3B4","R5G3B4","R5G3B5","R5G3B5","R5G4B0","R5G4B0","R5G4B1","R5G4B1","R5G4B2","R5G4B2","R5G4B3","R5G4B3","R5G4B4","R5G4B4","R5G4B5","R5G4B5","R5G5B0","R5G5B0","R5G5B1","R5G5B1","R5G5B2","R5G5B2","R5G5B3","R5G5B3","R5G5B4","R5G5B4","R5G5B5","R5G5B5","Red","Red","Reset","Reset","Resetter","SEP_PATTERN","StringWrapper","UnexpectedEndCharacter","UnsupportedANSICode","UnsupportedEndChar","ValueIsNotAModifier","ValueNotRecognised","VariantNotFound","White","White","Yellow","Yellow","add","ansi_enum_builder","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","code","default","default","default","deref","deref","deref","end_char","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","into","into","into","into","into","into","into","into","into","into","into","into","into_ansi_escape_code","into_ansi_escape_code","into_ansi_escape_code","into_ansi_escape_code","into_iter","into_iter","into_iter","iter","iter","iter","iter_grayscale","iter_grayscale","len","len","len","modifiers","new","next","next","next","next_back","next_back","next_back","nth","nth","nth","parse","provide","resetter","resetter","resetter","resetter","resetter","sep","size_hint","size_hint","size_hint","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","use_sep","wraps","wraps","wraps","wraps","wraps"],"q":["conchd":["A basic dataclass of a deconstructed <code>\\\\x1b[00;00;..m</code> …","An Enum for ANSI 256-colour codes.","","An iterator over the variants of Self","","","","","","","","","","","","","","","","","","","","","","","","An Enum for ANSI 256-colour codes.","","An iterator over the variants of Self","","","","Default <code>sep</code> to use for <code>ANSIEscapeCode</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Intensity modifier","","An iterator over the variants of Self","Custom Trait for anything that can be converted into …","","","","","","A enum of possible error types during modifier operationsrait for anything that has a resetter method.","","Auto trait for structs and enums that can wrap a string.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Command Code.","","","","","","","The trailing character of the sequence.","","","","","","","","Format this pattern back into its <code>str</code> form.","","","","Transform the object into ANSIEscapeCode, then use that to …","Transform the object into ANSIEscapeCode, then use that to …","","","Transform the object into ANSIEscapeCode, then use that to …","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Global implementation for anything that has the …","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","Iterate through the greyscale members of this enum.","Iterate through the greyscale members of this enum.","","","","Modifier codes.","Creates a new <code>ANSIEscapeCode</code> instance with the default …","","","","","","","","","","Parse a <code>str</code> beginning with <code>\\\\x1b</code> into a [<code>regex::Captures</code>] …","","","","","","","Separator char.","","","","","","","","","","","","","","","","","","","","","Try parsing an <code>ANSIEscapeCode</code> from a [<code>regex::Captures</code>].","","","","","","Global Implementation for all the base enums, which …","Use ANSIEscapeCode to parse the str first, then select …","","","","","Global Implementation for all the base enums, which …","Use ANSIEscapeCode to parse the str first, then select …","","","Global Implementation for all the base enums, which …","","Use ANSIEscapeCode to parse the str first, then select …","","","","","","","","","","","","","","","","","","","","","","","","","","","Replace the seperator in this instance.","","Enclose the text with the modifier.","Enclose the text with the modifier.","Enclose the text with the modifier.","Enclose the text with the modifier."],"i":[0,0,1,0,17,17,5,6,5,6,7,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,0,1,0,1,5,6,0,0,0,7,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,0,1,0,0,5,6,17,17,0,0,7,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,0,0,0,17,17,17,17,17,17,5,6,5,6,1,0,8,10,1,11,12,17,2,5,3,6,4,7,8,10,1,11,12,17,2,5,3,6,4,7,2,3,4,2,3,4,12,5,6,7,8,10,11,12,12,5,6,7,1,1,12,12,17,17,5,5,6,6,7,7,8,10,1,11,12,12,17,2,5,3,6,4,7,8,10,1,11,12,17,2,5,3,6,4,7,31,5,6,7,2,3,4,5,6,7,5,6,2,3,4,12,12,2,3,4,2,3,4,2,3,4,12,17,32,1,5,6,7,12,2,3,4,2,3,4,1,12,17,5,6,7,8,10,1,1,1,1,11,12,12,12,17,2,5,5,5,5,5,3,6,6,6,6,6,4,7,7,7,7,7,8,10,1,11,12,17,2,5,3,6,4,7,8,10,1,11,12,17,2,5,3,6,4,7,12,33,1,5,6,7],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[1,1]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[2,2],[3,3],[4,4],[[]],[[]],[[]],0,[[],5],[[],6],[[],7],[8,9],[10,9],[11,9],0,[[12,12],13],[[5,5],13],[[6,6],13],[[7,7],13],[[1,14],[[16,[15]]]],[[1,14],[[16,[15]]]],[[12,14],[[16,[15]]]],[[12,14],[[16,[15]]]],[[17,14],[[16,[15]]]],[[17,14],[[16,[15]]]],[[5,14],[[16,[15]]]],[[5,14],[[16,[15]]]],[[6,14],[[16,[15]]]],[[6,14],[[16,[15]]]],[[7,14],[[16,[15]]]],[[7,14],[[16,[15]]]],[[]],[[]],[[]],[[]],[[]],[[],12],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],12],[5,12],[6,12],[7,12],[[]],[[]],[[]],[[],2],[[],3],[[],4],[[],18],[[],18],[2,19],[3,19],[4,19],0,[[[21,[20]],[21,[[24,[22,23]]]],25],12],[2,21],[3,21],[4,21],[2,21],[3,21],[4,21],[[2,19],21],[[3,19],21],[[4,19],21],[26,[[16,[27,17]]]],[28],[[[21,[26]]]],[[1,[21,[26]]],1],[[5,[21,[26]]],5],[[6,[21,[26]]],6],[[7,[21,[26]]],7],0,[2],[3],[4],[[]],[[]],[[]],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],16],[[],16],[[],16],[12,[[16,[1]]]],[26,[[16,[1]]]],[12,[[16,[1]]]],[[],16],[26,[[16,[12]]]],[27,[[16,[12]]]],[[],16],[[],16],[[],16],[[],16],[12,[[16,[5]]]],[12,[[16,[5]]]],[26,[[16,[5]]]],[21,[[16,[5]]]],[[],16],[12,[[16,[6]]]],[21,[[16,[6]]]],[12,[[16,[6]]]],[26,[[16,[6]]]],[[],16],[[],16],[12,[[16,[7]]]],[12,[[16,[7]]]],[26,[[16,[7]]]],[20,[[16,[7]]]],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[12,25],12],[26,29],[[1,26],29],[26,29],[26,29],[26,29]],"p":[[4,"Modifier"],[3,"ColourIter"],[3,"BackgroundIter"],[3,"IntensityIter"],[4,"Colour"],[4,"Background"],[4,"Intensity"],[3,"ESCAPE_CODE_PATTERN"],[3,"Regex"],[3,"ESCAPE_CODE_START_PATTERN"],[3,"SEP_PATTERN"],[3,"ANSIEscapeCode"],[15,"bool"],[3,"Formatter"],[3,"Error"],[4,"Result"],[4,"ModifierError"],[8,"Iterator"],[15,"usize"],[15,"u16"],[4,"Option"],[15,"i32"],[3,"Global"],[3,"Vec"],[15,"char"],[15,"str"],[3,"Captures"],[3,"Demand"],[3,"String"],[3,"TypeId"],[8,"IntoANSIEscapeCode"],[8,"Resetter"],[8,"StringWrapper"]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
