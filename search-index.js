var searchIndex = JSON.parse('{\
"conch":{"doc":"Conch - pretty <code>shell</code>","tn":["ANSIEscapeCode","Absolute","Background","Background","BackgroundIter","BadCapturesGroup","BadRegexPattern","Black","Black","Blue","Blue","Bold","BrightBlack","BrightBlack","BrightBlue","BrightBlue","BrightCyan","BrightCyan","BrightGreen","BrightGreen","BrightMagenta","BrightMagenta","BrightRed","BrightRed","BrightWhite","BrightWhite","BrightYellow","BrightYellow","Colour","Colour","ColourIter","Combo","Cyan","Cyan","DEFAULT_SEPARATOR","Down","ESCAPE_CODE_PATTERN","ESCAPE_CODE_START_PATTERN","Faint","FindModifiers","Grayscale00","Grayscale00","Grayscale01","Grayscale01","Grayscale02","Grayscale02","Grayscale03","Grayscale03","Grayscale04","Grayscale04","Grayscale05","Grayscale05","Grayscale06","Grayscale06","Grayscale07","Grayscale07","Grayscale08","Grayscale08","Grayscale09","Grayscale09","Grayscale10","Grayscale10","Grayscale11","Grayscale11","Grayscale12","Grayscale12","Grayscale13","Grayscale13","Grayscale14","Grayscale14","Grayscale15","Grayscale15","Grayscale16","Grayscale16","Grayscale17","Grayscale17","Grayscale18","Grayscale18","Grayscale19","Grayscale19","Grayscale20","Grayscale20","Grayscale21","Grayscale21","Grayscale22","Grayscale22","Grayscale23","Grayscale23","Green","Green","HasLength","Intensity","Intensity","IntensityIter","IntoANSIEscapeCode","Left","LengthWithoutModifiers","Magenta","Magenta","MismatchedANSICode","MissingANSICode","Modifier","ModifierError","ModifiersInText","MoveCursor","MoveCursor","MoveCursorIter","Normal","Origin","R0G0B0","R0G0B0","R0G0B1","R0G0B1","R0G0B2","R0G0B2","R0G0B3","R0G0B3","R0G0B4","R0G0B4","R0G0B5","R0G0B5","R0G1B0","R0G1B0","R0G1B1","R0G1B1","R0G1B2","R0G1B2","R0G1B3","R0G1B3","R0G1B4","R0G1B4","R0G1B5","R0G1B5","R0G2B0","R0G2B0","R0G2B1","R0G2B1","R0G2B2","R0G2B2","R0G2B3","R0G2B3","R0G2B4","R0G2B4","R0G2B5","R0G2B5","R0G3B0","R0G3B0","R0G3B1","R0G3B1","R0G3B2","R0G3B2","R0G3B3","R0G3B3","R0G3B4","R0G3B4","R0G3B5","R0G3B5","R0G4B0","R0G4B0","R0G4B1","R0G4B1","R0G4B2","R0G4B2","R0G4B3","R0G4B3","R0G4B4","R0G4B4","R0G4B5","R0G4B5","R0G5B0","R0G5B0","R0G5B1","R0G5B1","R0G5B2","R0G5B2","R0G5B3","R0G5B3","R0G5B4","R0G5B4","R0G5B5","R0G5B5","R1G0B0","R1G0B0","R1G0B1","R1G0B1","R1G0B2","R1G0B2","R1G0B3","R1G0B3","R1G0B4","R1G0B4","R1G0B5","R1G0B5","R1G1B0","R1G1B0","R1G1B1","R1G1B1","R1G1B2","R1G1B2","R1G1B3","R1G1B3","R1G1B4","R1G1B4","R1G1B5","R1G1B5","R1G2B0","R1G2B0","R1G2B1","R1G2B1","R1G2B2","R1G2B2","R1G2B3","R1G2B3","R1G2B4","R1G2B4","R1G2B5","R1G2B5","R1G3B0","R1G3B0","R1G3B1","R1G3B1","R1G3B2","R1G3B2","R1G3B3","R1G3B3","R1G3B4","R1G3B4","R1G3B5","R1G3B5","R1G4B0","R1G4B0","R1G4B1","R1G4B1","R1G4B2","R1G4B2","R1G4B3","R1G4B3","R1G4B4","R1G4B4","R1G4B5","R1G4B5","R1G5B0","R1G5B0","R1G5B1","R1G5B1","R1G5B2","R1G5B2","R1G5B3","R1G5B3","R1G5B4","R1G5B4","R1G5B5","R1G5B5","R2G0B0","R2G0B0","R2G0B1","R2G0B1","R2G0B2","R2G0B2","R2G0B3","R2G0B3","R2G0B4","R2G0B4","R2G0B5","R2G0B5","R2G1B0","R2G1B0","R2G1B1","R2G1B1","R2G1B2","R2G1B2","R2G1B3","R2G1B3","R2G1B4","R2G1B4","R2G1B5","R2G1B5","R2G2B0","R2G2B0","R2G2B1","R2G2B1","R2G2B2","R2G2B2","R2G2B3","R2G2B3","R2G2B4","R2G2B4","R2G2B5","R2G2B5","R2G3B0","R2G3B0","R2G3B1","R2G3B1","R2G3B2","R2G3B2","R2G3B3","R2G3B3","R2G3B4","R2G3B4","R2G3B5","R2G3B5","R2G4B0","R2G4B0","R2G4B1","R2G4B1","R2G4B2","R2G4B2","R2G4B3","R2G4B3","R2G4B4","R2G4B4","R2G4B5","R2G4B5","R2G5B0","R2G5B0","R2G5B1","R2G5B1","R2G5B2","R2G5B2","R2G5B3","R2G5B3","R2G5B4","R2G5B4","R2G5B5","R2G5B5","R3G0B0","R3G0B0","R3G0B1","R3G0B1","R3G0B2","R3G0B2","R3G0B3","R3G0B3","R3G0B4","R3G0B4","R3G0B5","R3G0B5","R3G1B0","R3G1B0","R3G1B1","R3G1B1","R3G1B2","R3G1B2","R3G1B3","R3G1B3","R3G1B4","R3G1B4","R3G1B5","R3G1B5","R3G2B0","R3G2B0","R3G2B1","R3G2B1","R3G2B2","R3G2B2","R3G2B3","R3G2B3","R3G2B4","R3G2B4","R3G2B5","R3G2B5","R3G3B0","R3G3B0","R3G3B1","R3G3B1","R3G3B2","R3G3B2","R3G3B3","R3G3B3","R3G3B4","R3G3B4","R3G3B5","R3G3B5","R3G4B0","R3G4B0","R3G4B1","R3G4B1","R3G4B2","R3G4B2","R3G4B3","R3G4B3","R3G4B4","R3G4B4","R3G4B5","R3G4B5","R3G5B0","R3G5B0","R3G5B1","R3G5B1","R3G5B2","R3G5B2","R3G5B3","R3G5B3","R3G5B4","R3G5B4","R3G5B5","R3G5B5","R4G0B0","R4G0B0","R4G0B1","R4G0B1","R4G0B2","R4G0B2","R4G0B3","R4G0B3","R4G0B4","R4G0B4","R4G0B5","R4G0B5","R4G1B0","R4G1B0","R4G1B1","R4G1B1","R4G1B2","R4G1B2","R4G1B3","R4G1B3","R4G1B4","R4G1B4","R4G1B5","R4G1B5","R4G2B0","R4G2B0","R4G2B1","R4G2B1","R4G2B2","R4G2B2","R4G2B3","R4G2B3","R4G2B4","R4G2B4","R4G2B5","R4G2B5","R4G3B0","R4G3B0","R4G3B1","R4G3B1","R4G3B2","R4G3B2","R4G3B3","R4G3B3","R4G3B4","R4G3B4","R4G3B5","R4G3B5","R4G4B0","R4G4B0","R4G4B1","R4G4B1","R4G4B2","R4G4B2","R4G4B3","R4G4B3","R4G4B4","R4G4B4","R4G4B5","R4G4B5","R4G5B0","R4G5B0","R4G5B1","R4G5B1","R4G5B2","R4G5B2","R4G5B3","R4G5B3","R4G5B4","R4G5B4","R4G5B5","R4G5B5","R5G0B0","R5G0B0","R5G0B1","R5G0B1","R5G0B2","R5G0B2","R5G0B3","R5G0B3","R5G0B4","R5G0B4","R5G0B5","R5G0B5","R5G1B0","R5G1B0","R5G1B1","R5G1B1","R5G1B2","R5G1B2","R5G1B3","R5G1B3","R5G1B4","R5G1B4","R5G1B5","R5G1B5","R5G2B0","R5G2B0","R5G2B1","R5G2B1","R5G2B2","R5G2B2","R5G2B3","R5G2B3","R5G2B4","R5G2B4","R5G2B5","R5G2B5","R5G3B0","R5G3B0","R5G3B1","R5G3B1","R5G3B2","R5G3B2","R5G3B3","R5G3B3","R5G3B4","R5G3B4","R5G3B5","R5G3B5","R5G4B0","R5G4B0","R5G4B1","R5G4B1","R5G4B2","R5G4B2","R5G4B3","R5G4B3","R5G4B4","R5G4B4","R5G4B5","R5G4B5","R5G5B0","R5G5B0","R5G5B1","R5G5B1","R5G5B2","R5G5B2","R5G5B3","R5G5B3","R5G5B4","R5G5B4","R5G5B5","R5G5B5","RangeWithoutModifiers","Red","Red","Reset","Reset","Resetter","Right","SEP_PATTERN","StringWrapper","UnexpectedEndCharacter","UnsupportedANSICode","UnsupportedEndChar","Up","ValueIsNotAModifier","ValueNotRecognised","VariantNotFound","White","White","Yellow","Yellow","absolute","add","add_assign","add_source","ansi_enum_builder","background","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","by_name","by_name","by_name","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","code","colour","default","default","default","deref","deref","deref","down","end_char","eq","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","index_with_modifiers","index_without_modifiers","intensity","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_ansi_escape_code","into_ansi_escape_code","into_ansi_escape_code","into_ansi_escape_code","into_ansi_escape_code","into_iter","into_iter","into_iter","into_iter","into_iter","iter","iter","iter","iter","iter_grayscale","iter_grayscale","iter_modifiers","left","len","len","len","len","len","len","len","len","len","len","len","len","len_without_modifiers","modifiers","new","new","new","next","next","next","next","next","next_back","next_back","next_back","next_back","next_match","nth","nth","nth","nth","origin","parse","prelude","provide","range_with_modifiers","range_without_modifiers","relative","resetter","resetter","resetter","resetter","resetter","resetter","right","sep","size_hint","size_hint","size_hint","size_hint","source_str","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","up","use_sep","wraps","wraps","wraps","wraps","wraps","wraps","Background","Background","BadCapturesGroup","BadRegexPattern","Black","Black","Blue","Blue","Bold","BrightBlack","BrightBlack","BrightBlue","BrightBlue","BrightCyan","BrightCyan","BrightGreen","BrightGreen","BrightMagenta","BrightMagenta","BrightRed","BrightRed","BrightWhite","BrightWhite","BrightYellow","BrightYellow","Colour","Colour","Combo","Cyan","Cyan","Faint","Grayscale00","Grayscale00","Grayscale01","Grayscale01","Grayscale02","Grayscale02","Grayscale03","Grayscale03","Grayscale04","Grayscale04","Grayscale05","Grayscale05","Grayscale06","Grayscale06","Grayscale07","Grayscale07","Grayscale08","Grayscale08","Grayscale09","Grayscale09","Grayscale10","Grayscale10","Grayscale11","Grayscale11","Grayscale12","Grayscale12","Grayscale13","Grayscale13","Grayscale14","Grayscale14","Grayscale15","Grayscale15","Grayscale16","Grayscale16","Grayscale17","Grayscale17","Grayscale18","Grayscale18","Grayscale19","Grayscale19","Grayscale20","Grayscale20","Grayscale21","Grayscale21","Grayscale22","Grayscale22","Grayscale23","Grayscale23","Green","Green","Intensity","Intensity","IntoANSIEscapeCode","Magenta","Magenta","MismatchedANSICode","MissingANSICode","Modifier","ModifierError","MoveCursor","Normal","R0G0B0","R0G0B0","R0G0B1","R0G0B1","R0G0B2","R0G0B2","R0G0B3","R0G0B3","R0G0B4","R0G0B4","R0G0B5","R0G0B5","R0G1B0","R0G1B0","R0G1B1","R0G1B1","R0G1B2","R0G1B2","R0G1B3","R0G1B3","R0G1B4","R0G1B4","R0G1B5","R0G1B5","R0G2B0","R0G2B0","R0G2B1","R0G2B1","R0G2B2","R0G2B2","R0G2B3","R0G2B3","R0G2B4","R0G2B4","R0G2B5","R0G2B5","R0G3B0","R0G3B0","R0G3B1","R0G3B1","R0G3B2","R0G3B2","R0G3B3","R0G3B3","R0G3B4","R0G3B4","R0G3B5","R0G3B5","R0G4B0","R0G4B0","R0G4B1","R0G4B1","R0G4B2","R0G4B2","R0G4B3","R0G4B3","R0G4B4","R0G4B4","R0G4B5","R0G4B5","R0G5B0","R0G5B0","R0G5B1","R0G5B1","R0G5B2","R0G5B2","R0G5B3","R0G5B3","R0G5B4","R0G5B4","R0G5B5","R0G5B5","R1G0B0","R1G0B0","R1G0B1","R1G0B1","R1G0B2","R1G0B2","R1G0B3","R1G0B3","R1G0B4","R1G0B4","R1G0B5","R1G0B5","R1G1B0","R1G1B0","R1G1B1","R1G1B1","R1G1B2","R1G1B2","R1G1B3","R1G1B3","R1G1B4","R1G1B4","R1G1B5","R1G1B5","R1G2B0","R1G2B0","R1G2B1","R1G2B1","R1G2B2","R1G2B2","R1G2B3","R1G2B3","R1G2B4","R1G2B4","R1G2B5","R1G2B5","R1G3B0","R1G3B0","R1G3B1","R1G3B1","R1G3B2","R1G3B2","R1G3B3","R1G3B3","R1G3B4","R1G3B4","R1G3B5","R1G3B5","R1G4B0","R1G4B0","R1G4B1","R1G4B1","R1G4B2","R1G4B2","R1G4B3","R1G4B3","R1G4B4","R1G4B4","R1G4B5","R1G4B5","R1G5B0","R1G5B0","R1G5B1","R1G5B1","R1G5B2","R1G5B2","R1G5B3","R1G5B3","R1G5B4","R1G5B4","R1G5B5","R1G5B5","R2G0B0","R2G0B0","R2G0B1","R2G0B1","R2G0B2","R2G0B2","R2G0B3","R2G0B3","R2G0B4","R2G0B4","R2G0B5","R2G0B5","R2G1B0","R2G1B0","R2G1B1","R2G1B1","R2G1B2","R2G1B2","R2G1B3","R2G1B3","R2G1B4","R2G1B4","R2G1B5","R2G1B5","R2G2B0","R2G2B0","R2G2B1","R2G2B1","R2G2B2","R2G2B2","R2G2B3","R2G2B3","R2G2B4","R2G2B4","R2G2B5","R2G2B5","R2G3B0","R2G3B0","R2G3B1","R2G3B1","R2G3B2","R2G3B2","R2G3B3","R2G3B3","R2G3B4","R2G3B4","R2G3B5","R2G3B5","R2G4B0","R2G4B0","R2G4B1","R2G4B1","R2G4B2","R2G4B2","R2G4B3","R2G4B3","R2G4B4","R2G4B4","R2G4B5","R2G4B5","R2G5B0","R2G5B0","R2G5B1","R2G5B1","R2G5B2","R2G5B2","R2G5B3","R2G5B3","R2G5B4","R2G5B4","R2G5B5","R2G5B5","R3G0B0","R3G0B0","R3G0B1","R3G0B1","R3G0B2","R3G0B2","R3G0B3","R3G0B3","R3G0B4","R3G0B4","R3G0B5","R3G0B5","R3G1B0","R3G1B0","R3G1B1","R3G1B1","R3G1B2","R3G1B2","R3G1B3","R3G1B3","R3G1B4","R3G1B4","R3G1B5","R3G1B5","R3G2B0","R3G2B0","R3G2B1","R3G2B1","R3G2B2","R3G2B2","R3G2B3","R3G2B3","R3G2B4","R3G2B4","R3G2B5","R3G2B5","R3G3B0","R3G3B0","R3G3B1","R3G3B1","R3G3B2","R3G3B2","R3G3B3","R3G3B3","R3G3B4","R3G3B4","R3G3B5","R3G3B5","R3G4B0","R3G4B0","R3G4B1","R3G4B1","R3G4B2","R3G4B2","R3G4B3","R3G4B3","R3G4B4","R3G4B4","R3G4B5","R3G4B5","R3G5B0","R3G5B0","R3G5B1","R3G5B1","R3G5B2","R3G5B2","R3G5B3","R3G5B3","R3G5B4","R3G5B4","R3G5B5","R3G5B5","R4G0B0","R4G0B0","R4G0B1","R4G0B1","R4G0B2","R4G0B2","R4G0B3","R4G0B3","R4G0B4","R4G0B4","R4G0B5","R4G0B5","R4G1B0","R4G1B0","R4G1B1","R4G1B1","R4G1B2","R4G1B2","R4G1B3","R4G1B3","R4G1B4","R4G1B4","R4G1B5","R4G1B5","R4G2B0","R4G2B0","R4G2B1","R4G2B1","R4G2B2","R4G2B2","R4G2B3","R4G2B3","R4G2B4","R4G2B4","R4G2B5","R4G2B5","R4G3B0","R4G3B0","R4G3B1","R4G3B1","R4G3B2","R4G3B2","R4G3B3","R4G3B3","R4G3B4","R4G3B4","R4G3B5","R4G3B5","R4G4B0","R4G4B0","R4G4B1","R4G4B1","R4G4B2","R4G4B2","R4G4B3","R4G4B3","R4G4B4","R4G4B4","R4G4B5","R4G4B5","R4G5B0","R4G5B0","R4G5B1","R4G5B1","R4G5B2","R4G5B2","R4G5B3","R4G5B3","R4G5B4","R4G5B4","R4G5B5","R4G5B5","R5G0B0","R5G0B0","R5G0B1","R5G0B1","R5G0B2","R5G0B2","R5G0B3","R5G0B3","R5G0B4","R5G0B4","R5G0B5","R5G0B5","R5G1B0","R5G1B0","R5G1B1","R5G1B1","R5G1B2","R5G1B2","R5G1B3","R5G1B3","R5G1B4","R5G1B4","R5G1B5","R5G1B5","R5G2B0","R5G2B0","R5G2B1","R5G2B1","R5G2B2","R5G2B2","R5G2B3","R5G2B3","R5G2B4","R5G2B4","R5G2B5","R5G2B5","R5G3B0","R5G3B0","R5G3B1","R5G3B1","R5G3B2","R5G3B2","R5G3B3","R5G3B3","R5G3B4","R5G3B4","R5G3B5","R5G3B5","R5G4B0","R5G4B0","R5G4B1","R5G4B1","R5G4B2","R5G4B2","R5G4B3","R5G4B3","R5G4B4","R5G4B4","R5G4B5","R5G4B5","R5G5B0","R5G5B0","R5G5B1","R5G5B1","R5G5B2","R5G5B2","R5G5B3","R5G5B3","R5G5B4","R5G5B4","R5G5B5","R5G5B5","Red","Red","Reset","Reset","Resetter","StringWrapper","UnexpectedEndCharacter","UnsupportedANSICode","UnsupportedEndChar","ValueIsNotAModifier","ValueNotRecognised","VariantNotFound","White","White","Yellow","Yellow","into_ansi_escape_code","resetter","wraps"],"q":["conchconch::preluded":["A basic dataclass of a deconstructed <code>\\\\x1b[00;00;..m</code> …","","An Enum for ANSI 256-colour codes.","","An iterator over the variants of Self","","","","","","","","","","","","","","","","","","","","","","","","An Enum for ANSI 256-colour codes.","","An iterator over the variants of Self","","","","Default <code>sep</code> to use for [<code>ANSIEscapeCode</code>].","","<code>Regex</code> pattern for an escape code anywhere within a given …","<code>Regex</code> pattern for an escape code leading a given text.","","Trait for <code>str</code> and <code>String</code> to iterate its modifiers.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Custom Trait for anything that have a <code>len</code>.","Intensity modifier","","An iterator over the variants of Self","Custom Trait for anything that can be converted into …","","","","","","","Unified <code>Modifier</code> enum type.","A enum of possible error types during modifier operations.","","Move the position of the current cursor in the terminal.","","An iterator over the variants of Selfrait for anything that has a resetter method.","","<code>Regex</code> pattern for any valid separators - namely <code>:</code> and <code>;</code>.","Auto trait for structs and enums that can wrap a string.","","","","","","","","","","","","","","","Chained method to add a soruce to this instance.","An internal helper macro that builds all the auto …","Implement a convenient static method to get a <code>Background</code> …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Command Code.","Implement a convenient static method to get a <code>Colour</code> by …","","","","","","","","The trailing character of the sequence.","","","","","","","Format this pattern back into its <code>str</code> form.","","","","","","Transform the object into ANSIEscapeCode, then use that to …","","","Transform the object into ANSIEscapeCode, then use that to …","","Transform the object into ANSIEscapeCode, then use that to …","","Transform the object into ANSIEscapeCode, then use that to …","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Global implementation for anything that has the …","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Implement a convenient static method to get a <code>Intensity</code> by …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","Convert any <code>MoveCursor</code> into a <code>ANSIEscapeCode</code>.","","","","","","","","","","Iterate through the greyscale members of this enum.","Iterate through the greyscale members of this enum.","","","","","Return the <code>len</code> of the stringified version of itself.","String Length of the <code>Modifier</code> upon conversion.","","","","","","","","","","Modifier codes.","Creates a new <code>ANSIEscapeCode</code> instance with the default …","","","","","","","","","","","","","","","","","","Parse a <code>str</code> beginning with <code>\\\\x1b</code> into a [<code>regex::Captures</code>] …","A subset of structs, enums and traits that are more likely …","","","","","","","","","Attempt to reset any settings to before this modifier was …","Attempt to reset any settings to before this modifier was …","","Separator char.","","","","","Original <code>String</code> that generated this instance.","","","","","","","","","","","","","","","","","","","","Try parsing an <code>ANSIEscapeCode</code> from a [<code>regex::Captures</code>].","","","","","","","","","","","Global Implementation for all the base enums, which …","","Use ANSIEscapeCode to parse the str first, then select …","","","","","","Use ANSIEscapeCode to parse the str first, then select …","","Global Implementation for all the base enums, which …","","","Use ANSIEscapeCode to parse the str first, then select …","Global Implementation for all the base enums, which …","","","Use ANSIEscapeCode to parse the str first, then select …","Global Implementation for all the base enums, which …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Replace the seperator in this instance.","","Enclose the text with the modifier.","Enclose the text with the modifier.","Enclose the text with the modifier.","Enclose the text with the modifier.","Enclose the text with the modifier.","An Enum for ANSI 256-colour codes.","","","","","","","","","","","","","","","","","","","","","","","","","An Enum for ANSI 256-colour codes.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Intensity modifier","","Custom Trait for anything that can be converted into …","","","","","Unified <code>Modifier</code> enum type.","A enum of possible error types during modifier operationsrait for anything that has a resetter method.","Auto trait for structs and enums that can wrap a string.","","","","","","","","","","","","",""],"i":[0,12,0,2,0,22,22,6,7,6,7,8,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,0,2,0,2,6,7,0,12,0,0,8,0,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,0,0,2,0,0,12,0,6,7,22,22,0,0,0,0,2,0,8,12,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,0,6,7,6,7,0,12,0,0,22,22,22,12,22,22,22,6,7,6,7,2,2,2,3,0,2,14,16,17,3,22,26,23,2,9,6,10,7,11,8,12,13,14,16,17,3,22,26,23,2,9,6,10,7,11,8,12,13,6,7,8,2,9,6,10,7,11,8,12,13,2,9,6,10,7,11,8,12,13,3,2,6,7,8,14,16,17,2,3,3,2,6,7,8,12,3,3,22,22,2,2,6,6,7,7,8,8,12,12,14,16,17,3,3,22,26,23,2,9,6,10,7,11,8,12,13,23,23,2,14,16,17,3,22,26,23,2,9,6,10,7,11,8,12,13,37,6,7,8,12,26,9,10,11,13,6,7,8,12,6,7,38,2,39,38,3,2,9,6,10,7,11,8,12,13,40,3,3,26,23,26,9,10,11,13,9,10,11,13,26,9,10,11,13,2,3,0,22,23,23,2,41,2,6,7,8,12,2,3,9,10,11,13,3,2,9,6,10,7,11,8,12,13,3,22,2,6,7,8,12,14,16,17,3,3,3,22,26,23,2,2,2,2,9,6,6,6,6,6,10,7,7,7,7,7,11,8,8,8,8,8,12,12,12,12,13,14,16,17,3,22,26,23,2,9,6,10,7,11,8,12,13,14,16,17,3,22,26,23,2,9,6,10,7,11,8,12,13,2,3,42,2,6,7,8,12,0,2,22,22,6,7,6,7,8,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,0,2,2,6,7,8,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,0,2,0,6,7,22,22,0,0,2,8,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,0,0,22,22,22,22,22,22,6,7,6,7,37,41,42],"fp":[[15,"i32"],[4,"Modifier"],[3,"ANSIEscapeCode"],[15,"str"],[4,"Option"],[4,"Colour"],[4,"Background"],[4,"Intensity"],[3,"ColourIter"],[3,"BackgroundIter"],[3,"IntensityIter"],[4,"MoveCursor"],[3,"MoveCursorIter"],[3,"ESCAPE_CODE_PATTERN"],[3,"Regex"],[3,"ESCAPE_CODE_START_PATTERN"],[3,"SEP_PATTERN"],[15,"bool"],[3,"Formatter"],[3,"Error"],[4,"Result"],[4,"ModifierError"],[3,"RangeWithoutModifiers"],[15,"usize"],[8,"Iterator"],[3,"ModifiersInText"],[15,"u16"],[3,"Global"],[3,"Vec"],[15,"char"],[3,"Match"],[3,"Captures"],[3,"Demand"],[3,"Range"],[3,"String"],[3,"TypeId"],[8,"IntoANSIEscapeCode"],[8,"FindModifiers"],[8,"HasLength"],[8,"LengthWithoutModifiers"],[8,"Resetter"],[8,"StringWrapper"]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
