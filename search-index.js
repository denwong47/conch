var searchIndex = JSON.parse('{\
"conch":{"doc":"Conch - pretty <code>shell</code>","tn":["ANSIEscapeCode","Absolute","Background","Background","BackgroundIter","BadCapturesGroup","BadRegexPattern","Black","Black","Blue","Blue","Bold","BrightBlack","BrightBlack","BrightBlue","BrightBlue","BrightCyan","BrightCyan","BrightGreen","BrightGreen","BrightMagenta","BrightMagenta","BrightRed","BrightRed","BrightWhite","BrightWhite","BrightYellow","BrightYellow","CalendarMonth","Colour","Colour","ColourIter","Combo","ContainsDate","Cyan","Cyan","DEFAULT_HOLIDAY_MODIFIER","DEFAULT_OTHER_MONTH_MODIFIER","DEFAULT_SEPARATOR","DEFAULT_TITLE_MODIFIER","DEFAULT_WEEKDAY_MODIFIER","DEFAULT_WEEK_STARTS_WITH","Down","ESCAPE_CODE_PATTERN","ESCAPE_CODE_START_PATTERN","Faint","FindModifiers","Grayscale00","Grayscale00","Grayscale01","Grayscale01","Grayscale02","Grayscale02","Grayscale03","Grayscale03","Grayscale04","Grayscale04","Grayscale05","Grayscale05","Grayscale06","Grayscale06","Grayscale07","Grayscale07","Grayscale08","Grayscale08","Grayscale09","Grayscale09","Grayscale10","Grayscale10","Grayscale11","Grayscale11","Grayscale12","Grayscale12","Grayscale13","Grayscale13","Grayscale14","Grayscale14","Grayscale15","Grayscale15","Grayscale16","Grayscale16","Grayscale17","Grayscale17","Grayscale18","Grayscale18","Grayscale19","Grayscale19","Grayscale20","Grayscale20","Grayscale21","Grayscale21","Grayscale22","Grayscale22","Grayscale23","Grayscale23","Green","Green","HasLength","HolidayList","Holidays","Intensity","Intensity","IntensityIter","IntoANSIEscapeCode","IterRangeByDuration","LastWeekdayOfMonth","Left","LengthWithoutModifiers","Lines","Magenta","Magenta","MismatchedANSICode","MissingANSICode","Modifier","ModifierError","ModifiersInText","MoveCursor","MoveCursor","MoveCursorIter","NextWeekdayFromDate","Normal","Nothing","Origin","R0G0B0","R0G0B0","R0G0B1","R0G0B1","R0G0B2","R0G0B2","R0G0B3","R0G0B3","R0G0B4","R0G0B4","R0G0B5","R0G0B5","R0G1B0","R0G1B0","R0G1B1","R0G1B1","R0G1B2","R0G1B2","R0G1B3","R0G1B3","R0G1B4","R0G1B4","R0G1B5","R0G1B5","R0G2B0","R0G2B0","R0G2B1","R0G2B1","R0G2B2","R0G2B2","R0G2B3","R0G2B3","R0G2B4","R0G2B4","R0G2B5","R0G2B5","R0G3B0","R0G3B0","R0G3B1","R0G3B1","R0G3B2","R0G3B2","R0G3B3","R0G3B3","R0G3B4","R0G3B4","R0G3B5","R0G3B5","R0G4B0","R0G4B0","R0G4B1","R0G4B1","R0G4B2","R0G4B2","R0G4B3","R0G4B3","R0G4B4","R0G4B4","R0G4B5","R0G4B5","R0G5B0","R0G5B0","R0G5B1","R0G5B1","R0G5B2","R0G5B2","R0G5B3","R0G5B3","R0G5B4","R0G5B4","R0G5B5","R0G5B5","R1G0B0","R1G0B0","R1G0B1","R1G0B1","R1G0B2","R1G0B2","R1G0B3","R1G0B3","R1G0B4","R1G0B4","R1G0B5","R1G0B5","R1G1B0","R1G1B0","R1G1B1","R1G1B1","R1G1B2","R1G1B2","R1G1B3","R1G1B3","R1G1B4","R1G1B4","R1G1B5","R1G1B5","R1G2B0","R1G2B0","R1G2B1","R1G2B1","R1G2B2","R1G2B2","R1G2B3","R1G2B3","R1G2B4","R1G2B4","R1G2B5","R1G2B5","R1G3B0","R1G3B0","R1G3B1","R1G3B1","R1G3B2","R1G3B2","R1G3B3","R1G3B3","R1G3B4","R1G3B4","R1G3B5","R1G3B5","R1G4B0","R1G4B0","R1G4B1","R1G4B1","R1G4B2","R1G4B2","R1G4B3","R1G4B3","R1G4B4","R1G4B4","R1G4B5","R1G4B5","R1G5B0","R1G5B0","R1G5B1","R1G5B1","R1G5B2","R1G5B2","R1G5B3","R1G5B3","R1G5B4","R1G5B4","R1G5B5","R1G5B5","R2G0B0","R2G0B0","R2G0B1","R2G0B1","R2G0B2","R2G0B2","R2G0B3","R2G0B3","R2G0B4","R2G0B4","R2G0B5","R2G0B5","R2G1B0","R2G1B0","R2G1B1","R2G1B1","R2G1B2","R2G1B2","R2G1B3","R2G1B3","R2G1B4","R2G1B4","R2G1B5","R2G1B5","R2G2B0","R2G2B0","R2G2B1","R2G2B1","R2G2B2","R2G2B2","R2G2B3","R2G2B3","R2G2B4","R2G2B4","R2G2B5","R2G2B5","R2G3B0","R2G3B0","R2G3B1","R2G3B1","R2G3B2","R2G3B2","R2G3B3","R2G3B3","R2G3B4","R2G3B4","R2G3B5","R2G3B5","R2G4B0","R2G4B0","R2G4B1","R2G4B1","R2G4B2","R2G4B2","R2G4B3","R2G4B3","R2G4B4","R2G4B4","R2G4B5","R2G4B5","R2G5B0","R2G5B0","R2G5B1","R2G5B1","R2G5B2","R2G5B2","R2G5B3","R2G5B3","R2G5B4","R2G5B4","R2G5B5","R2G5B5","R3G0B0","R3G0B0","R3G0B1","R3G0B1","R3G0B2","R3G0B2","R3G0B3","R3G0B3","R3G0B4","R3G0B4","R3G0B5","R3G0B5","R3G1B0","R3G1B0","R3G1B1","R3G1B1","R3G1B2","R3G1B2","R3G1B3","R3G1B3","R3G1B4","R3G1B4","R3G1B5","R3G1B5","R3G2B0","R3G2B0","R3G2B1","R3G2B1","R3G2B2","R3G2B2","R3G2B3","R3G2B3","R3G2B4","R3G2B4","R3G2B5","R3G2B5","R3G3B0","R3G3B0","R3G3B1","R3G3B1","R3G3B2","R3G3B2","R3G3B3","R3G3B3","R3G3B4","R3G3B4","R3G3B5","R3G3B5","R3G4B0","R3G4B0","R3G4B1","R3G4B1","R3G4B2","R3G4B2","R3G4B3","R3G4B3","R3G4B4","R3G4B4","R3G4B5","R3G4B5","R3G5B0","R3G5B0","R3G5B1","R3G5B1","R3G5B2","R3G5B2","R3G5B3","R3G5B3","R3G5B4","R3G5B4","R3G5B5","R3G5B5","R4G0B0","R4G0B0","R4G0B1","R4G0B1","R4G0B2","R4G0B2","R4G0B3","R4G0B3","R4G0B4","R4G0B4","R4G0B5","R4G0B5","R4G1B0","R4G1B0","R4G1B1","R4G1B1","R4G1B2","R4G1B2","R4G1B3","R4G1B3","R4G1B4","R4G1B4","R4G1B5","R4G1B5","R4G2B0","R4G2B0","R4G2B1","R4G2B1","R4G2B2","R4G2B2","R4G2B3","R4G2B3","R4G2B4","R4G2B4","R4G2B5","R4G2B5","R4G3B0","R4G3B0","R4G3B1","R4G3B1","R4G3B2","R4G3B2","R4G3B3","R4G3B3","R4G3B4","R4G3B4","R4G3B5","R4G3B5","R4G4B0","R4G4B0","R4G4B1","R4G4B1","R4G4B2","R4G4B2","R4G4B3","R4G4B3","R4G4B4","R4G4B4","R4G4B5","R4G4B5","R4G5B0","R4G5B0","R4G5B1","R4G5B1","R4G5B2","R4G5B2","R4G5B3","R4G5B3","R4G5B4","R4G5B4","R4G5B5","R4G5B5","R5G0B0","R5G0B0","R5G0B1","R5G0B1","R5G0B2","R5G0B2","R5G0B3","R5G0B3","R5G0B4","R5G0B4","R5G0B5","R5G0B5","R5G1B0","R5G1B0","R5G1B1","R5G1B1","R5G1B2","R5G1B2","R5G1B3","R5G1B3","R5G1B4","R5G1B4","R5G1B5","R5G1B5","R5G2B0","R5G2B0","R5G2B1","R5G2B1","R5G2B2","R5G2B2","R5G2B3","R5G2B3","R5G2B4","R5G2B4","R5G2B5","R5G2B5","R5G3B0","R5G3B0","R5G3B1","R5G3B1","R5G3B2","R5G3B2","R5G3B3","R5G3B3","R5G3B4","R5G3B4","R5G3B5","R5G3B5","R5G4B0","R5G4B0","R5G4B1","R5G4B1","R5G4B2","R5G4B2","R5G4B3","R5G4B3","R5G4B4","R5G4B4","R5G4B5","R5G4B5","R5G5B0","R5G5B0","R5G5B1","R5G5B1","R5G5B2","R5G5B2","R5G5B3","R5G5B3","R5G5B4","R5G5B4","R5G5B5","R5G5B5","RangeWithoutModifiers","Red","Red","RegionMarker","Reset","Reset","Resetter","Right","SEP_PATTERN","StepsOverRange","StringWrapper","UnexpectedEndCharacter","UnsupportedANSICode","UnsupportedEndChar","Up","ValueIsNotAModifier","ValueNotRecognised","VariantNotFound","White","White","Yellow","Yellow","absolute","add","add_assign","add_source","ansi_enum_builder","background","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","by_name","by_name","by_name","capitalize_title","capitalize_title","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","code","colour","config","contains","contains","date","decorate_day","decorated_days","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deserialize","deserialize","deserialize","down","end_char","eq","eq","eq","eq","eq","eq","extend","extend_one","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_text","func","holiday_modifier","index_with_modifiers","index_without_modifiers","intensity","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_ansi_escape_code","into_ansi_escape_code","into_ansi_escape_code","into_ansi_escape_code","into_ansi_escape_code","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter_by_duration","iter","iter","iter","iter","iter_grayscale","iter_grayscale","iter_modifiers","last_weekday_of_month","last_weekday_of_month_opt","left","len","len","len","len","len","len","len","len","len","len","len","len","len_without_modifiers","lines","list","list","list_holidays","modifier","modifiers","modify_holidays","modify_other_months","modify_title","modify_today","modify_weekdays","new","new","new","new","new","new","next","next","next","next","next","next","next","next_back","next_back","next_back","next_back","next_match","next_weekday_from","nth","nth","nth","nth","origin","other_month_modifier","parse","prefix","prelude","provide","range_with_modifiers","range_without_modifiers","regions","relative","resetter","resetter","resetter","resetter","resetter","resetter","right","s","sep","serialize","serialize","serialize","show_other_months","show_other_months","show_title","show_title","size_hint","size_hint","size_hint","size_hint","source_str","spacing","starts_week_with","starts_week_with","title","title","title_modifier","title_modifier","title_prefix","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","today_modifier","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","up","use_sep","week_starts_with","weekday_modifier","wraps","wraps","wraps","wraps","wraps","wraps","SUNDAYS","WEEKDAYS","WEEKENDS","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","deref","deref","deref","from","from","from","into","into","into","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","get_easter_date","Background","Background","BadCapturesGroup","BadRegexPattern","Black","Black","Blue","Blue","Bold","BrightBlack","BrightBlack","BrightBlue","BrightBlue","BrightCyan","BrightCyan","BrightGreen","BrightGreen","BrightMagenta","BrightMagenta","BrightRed","BrightRed","BrightWhite","BrightWhite","BrightYellow","BrightYellow","Colour","Colour","Combo","Cyan","Cyan","Faint","Grayscale00","Grayscale00","Grayscale01","Grayscale01","Grayscale02","Grayscale02","Grayscale03","Grayscale03","Grayscale04","Grayscale04","Grayscale05","Grayscale05","Grayscale06","Grayscale06","Grayscale07","Grayscale07","Grayscale08","Grayscale08","Grayscale09","Grayscale09","Grayscale10","Grayscale10","Grayscale11","Grayscale11","Grayscale12","Grayscale12","Grayscale13","Grayscale13","Grayscale14","Grayscale14","Grayscale15","Grayscale15","Grayscale16","Grayscale16","Grayscale17","Grayscale17","Grayscale18","Grayscale18","Grayscale19","Grayscale19","Grayscale20","Grayscale20","Grayscale21","Grayscale21","Grayscale22","Grayscale22","Grayscale23","Grayscale23","Green","Green","Intensity","Intensity","IntoANSIEscapeCode","Magenta","Magenta","MismatchedANSICode","MissingANSICode","Modifier","ModifierError","MoveCursor","Normal","Nothing","R0G0B0","R0G0B0","R0G0B1","R0G0B1","R0G0B2","R0G0B2","R0G0B3","R0G0B3","R0G0B4","R0G0B4","R0G0B5","R0G0B5","R0G1B0","R0G1B0","R0G1B1","R0G1B1","R0G1B2","R0G1B2","R0G1B3","R0G1B3","R0G1B4","R0G1B4","R0G1B5","R0G1B5","R0G2B0","R0G2B0","R0G2B1","R0G2B1","R0G2B2","R0G2B2","R0G2B3","R0G2B3","R0G2B4","R0G2B4","R0G2B5","R0G2B5","R0G3B0","R0G3B0","R0G3B1","R0G3B1","R0G3B2","R0G3B2","R0G3B3","R0G3B3","R0G3B4","R0G3B4","R0G3B5","R0G3B5","R0G4B0","R0G4B0","R0G4B1","R0G4B1","R0G4B2","R0G4B2","R0G4B3","R0G4B3","R0G4B4","R0G4B4","R0G4B5","R0G4B5","R0G5B0","R0G5B0","R0G5B1","R0G5B1","R0G5B2","R0G5B2","R0G5B3","R0G5B3","R0G5B4","R0G5B4","R0G5B5","R0G5B5","R1G0B0","R1G0B0","R1G0B1","R1G0B1","R1G0B2","R1G0B2","R1G0B3","R1G0B3","R1G0B4","R1G0B4","R1G0B5","R1G0B5","R1G1B0","R1G1B0","R1G1B1","R1G1B1","R1G1B2","R1G1B2","R1G1B3","R1G1B3","R1G1B4","R1G1B4","R1G1B5","R1G1B5","R1G2B0","R1G2B0","R1G2B1","R1G2B1","R1G2B2","R1G2B2","R1G2B3","R1G2B3","R1G2B4","R1G2B4","R1G2B5","R1G2B5","R1G3B0","R1G3B0","R1G3B1","R1G3B1","R1G3B2","R1G3B2","R1G3B3","R1G3B3","R1G3B4","R1G3B4","R1G3B5","R1G3B5","R1G4B0","R1G4B0","R1G4B1","R1G4B1","R1G4B2","R1G4B2","R1G4B3","R1G4B3","R1G4B4","R1G4B4","R1G4B5","R1G4B5","R1G5B0","R1G5B0","R1G5B1","R1G5B1","R1G5B2","R1G5B2","R1G5B3","R1G5B3","R1G5B4","R1G5B4","R1G5B5","R1G5B5","R2G0B0","R2G0B0","R2G0B1","R2G0B1","R2G0B2","R2G0B2","R2G0B3","R2G0B3","R2G0B4","R2G0B4","R2G0B5","R2G0B5","R2G1B0","R2G1B0","R2G1B1","R2G1B1","R2G1B2","R2G1B2","R2G1B3","R2G1B3","R2G1B4","R2G1B4","R2G1B5","R2G1B5","R2G2B0","R2G2B0","R2G2B1","R2G2B1","R2G2B2","R2G2B2","R2G2B3","R2G2B3","R2G2B4","R2G2B4","R2G2B5","R2G2B5","R2G3B0","R2G3B0","R2G3B1","R2G3B1","R2G3B2","R2G3B2","R2G3B3","R2G3B3","R2G3B4","R2G3B4","R2G3B5","R2G3B5","R2G4B0","R2G4B0","R2G4B1","R2G4B1","R2G4B2","R2G4B2","R2G4B3","R2G4B3","R2G4B4","R2G4B4","R2G4B5","R2G4B5","R2G5B0","R2G5B0","R2G5B1","R2G5B1","R2G5B2","R2G5B2","R2G5B3","R2G5B3","R2G5B4","R2G5B4","R2G5B5","R2G5B5","R3G0B0","R3G0B0","R3G0B1","R3G0B1","R3G0B2","R3G0B2","R3G0B3","R3G0B3","R3G0B4","R3G0B4","R3G0B5","R3G0B5","R3G1B0","R3G1B0","R3G1B1","R3G1B1","R3G1B2","R3G1B2","R3G1B3","R3G1B3","R3G1B4","R3G1B4","R3G1B5","R3G1B5","R3G2B0","R3G2B0","R3G2B1","R3G2B1","R3G2B2","R3G2B2","R3G2B3","R3G2B3","R3G2B4","R3G2B4","R3G2B5","R3G2B5","R3G3B0","R3G3B0","R3G3B1","R3G3B1","R3G3B2","R3G3B2","R3G3B3","R3G3B3","R3G3B4","R3G3B4","R3G3B5","R3G3B5","R3G4B0","R3G4B0","R3G4B1","R3G4B1","R3G4B2","R3G4B2","R3G4B3","R3G4B3","R3G4B4","R3G4B4","R3G4B5","R3G4B5","R3G5B0","R3G5B0","R3G5B1","R3G5B1","R3G5B2","R3G5B2","R3G5B3","R3G5B3","R3G5B4","R3G5B4","R3G5B5","R3G5B5","R4G0B0","R4G0B0","R4G0B1","R4G0B1","R4G0B2","R4G0B2","R4G0B3","R4G0B3","R4G0B4","R4G0B4","R4G0B5","R4G0B5","R4G1B0","R4G1B0","R4G1B1","R4G1B1","R4G1B2","R4G1B2","R4G1B3","R4G1B3","R4G1B4","R4G1B4","R4G1B5","R4G1B5","R4G2B0","R4G2B0","R4G2B1","R4G2B1","R4G2B2","R4G2B2","R4G2B3","R4G2B3","R4G2B4","R4G2B4","R4G2B5","R4G2B5","R4G3B0","R4G3B0","R4G3B1","R4G3B1","R4G3B2","R4G3B2","R4G3B3","R4G3B3","R4G3B4","R4G3B4","R4G3B5","R4G3B5","R4G4B0","R4G4B0","R4G4B1","R4G4B1","R4G4B2","R4G4B2","R4G4B3","R4G4B3","R4G4B4","R4G4B4","R4G4B5","R4G4B5","R4G5B0","R4G5B0","R4G5B1","R4G5B1","R4G5B2","R4G5B2","R4G5B3","R4G5B3","R4G5B4","R4G5B4","R4G5B5","R4G5B5","R5G0B0","R5G0B0","R5G0B1","R5G0B1","R5G0B2","R5G0B2","R5G0B3","R5G0B3","R5G0B4","R5G0B4","R5G0B5","R5G0B5","R5G1B0","R5G1B0","R5G1B1","R5G1B1","R5G1B2","R5G1B2","R5G1B3","R5G1B3","R5G1B4","R5G1B4","R5G1B5","R5G1B5","R5G2B0","R5G2B0","R5G2B1","R5G2B1","R5G2B2","R5G2B2","R5G2B3","R5G2B3","R5G2B4","R5G2B4","R5G2B5","R5G2B5","R5G3B0","R5G3B0","R5G3B1","R5G3B1","R5G3B2","R5G3B2","R5G3B3","R5G3B3","R5G3B4","R5G3B4","R5G3B5","R5G3B5","R5G4B0","R5G4B0","R5G4B1","R5G4B1","R5G4B2","R5G4B2","R5G4B3","R5G4B3","R5G4B4","R5G4B4","R5G4B5","R5G4B5","R5G5B0","R5G5B0","R5G5B1","R5G5B1","R5G5B2","R5G5B2","R5G5B3","R5G5B3","R5G5B4","R5G5B4","R5G5B5","R5G5B5","Red","Red","Reset","Reset","Resetter","StringWrapper","UnexpectedEndCharacter","UnsupportedANSICode","UnsupportedEndChar","ValueIsNotAModifier","ValueNotRecognised","VariantNotFound","White","White","Yellow","Yellow","into_ansi_escape_code","resetter","wraps","England","borrow","borrow_mut","from","into","list_holidays","starts_week_with","try_from","try_into","type_id"],"q":["conchconch::config","","","","","","","","","","","","","","","","","","","","","","","","","","","conch::func","conch::preludeconch::regions","","","","","","","","",""],"d":["A basic dataclass of a deconstructed <code>\\\\x1b[00;00;..m</code> …","","An Enum for ANSI 256-colour codes.","","An iterator over the variants of Self","","","","","","","","","","","","","","","","","","","","","","","","A struct to display a month on a calendar in stdout.","An Enum for ANSI 256-colour codes.","","An iterator over the variants of Self","","Trait to check if a date is within another struct of …","","","","","Default <code>sep</code> to use for [<code>ANSIEscapeCode</code>].","","","","","<code>Regex</code> pattern for an escape code anywhere within a given …","<code>Regex</code> pattern for an escape code leading a given text.","","Trait for <code>str</code> and <code>String</code> to iterate its modifiers.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Custom Trait for anything that have a <code>len</code>.","Trait for structs that can output a structure","Structs for static method to list public holidays of a …","Intensity modifier","","An iterator over the variants of Self","Custom Trait for anything that can be converted into …","Trait to allow a <code>Range&lt;Idx&gt;</code> or <code>RangeInclusive&lt;Idx&gt;</code> of time …","Trait for adding <code>last_weekday_of_month_opt</code> method to …","","","A wrapper around <code>Vec&lt;String&gt;</code> to provide more control over …","","","","","Unified <code>Modifier</code> enum type.","A enum of possible error types during modifier operations.","","Move the position of the current cursor in the terminal.","","An iterator over the variants of Self","Trait for adding <code>last_weekday_of_month_opt</code> method to …arker Trait for a Region.","","","Trait for anything that has a resetter method.","","<code>Regex</code> pattern for any valid separators - namely <code>:</code> and <code>;</code>.","Iterator struct to step over a <code>Range</code> or <code>RangeInclusive</code> of …","Auto trait for structs and enums that can wrap a string.","","","","","","","","","","","","","","","Chained method to add a soruce to this instance.","An internal helper macro that builds all the auto …","Implement a convenient static method to get a <code>Background</code> …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Chained method to change the <code>capitalize_title</code> of a …","Defines whether to capitalize the title row, so that …","","","","","","","","","","","","","","","","","","","","","Command Code.","Implement a convenient static method to get a <code>Colour</code> by …","","","Check if a date is inside the calendar month.","<code>NaiveDate</code> that this calendar is based on. The day will be …","Add a special <code>Modifier</code> to a single date.","A hashmap of days that requires special modifiers.","","","","","","","","","","","","","","","","","The trailing character of the sequence.","","","","","","","Extend the lines in an instance of <code>Lines</code>.","Append a line to an instance of <code>Lines</code>.","","","Format this pattern back into its <code>str</code> form.","","","","","","","Transform the object into ANSIEscapeCode, then use that to …","Transform the object into ANSIEscapeCode, then use that to …","","","Transform the object into ANSIEscapeCode, then use that to …","","Transform the object into ANSIEscapeCode, then use that to …","Returns the argument unchanged.","","Convert a <code>Vec&lt;S&gt;</code> of any <code>Item</code> that <code>impl</code> <code>ToString</code> into <code>Lines</code>.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Global implementation for anything that has the …","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Create a new instance of <code>Lines</code> by splitting a block of text","","Modifier for any Sundays and Public holidays within the …","","","Implement a convenient static method to get a <code>Intensity</code> by …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","Convert any <code>MoveCursor</code> into a <code>ANSIEscapeCode</code>.","","","","","","","","","","","","Iterate through the greyscale members of this enum.","Iterate through the greyscale members of this enum.","","Get the last weekday of the specified month.","Get the last weekday of the specified month.","","","","Return the <code>len</code> of the stringified version of itself.","String Length of the <code>Modifier</code> upon conversion.","","","","","","","","","","","","","List the holidays in a given year.","A chained function to set <code>Lines::prefix</code> on an instance.","Modifier codes.","Chained method to change the <code>holiday_modifier</code> of a …","Chained method to change the <code>other_month_modifier</code> of a …","Chained method to change the <code>title_modifier</code> of a …","Chained method to change the <code>today_modifier</code> of a …","Chained method to change the <code>weekday_modifier</code> of a …","Create a new <code>CalendarMonth</code> from a <code>NaiveDate</code> provided.","Create a new instance of <code>Lines</code> with default empty settings.","Creates a new <code>ANSIEscapeCode</code> instance with the default …","","","Create a new instance of <code>StepsOverRange</code> and set its …","","","","","","","","","","","","","Get the next weekday from the specified date.","","","","","","Modifier for the days from other months. This will only be …","Parse a <code>str</code> beginning with <code>\\\\x1b</code> into a [<code>regex::Captures</code>] …","A chained function to set <code>Lines::prefix</code> on an instance.","A subset of structs, enums and traits that are more likely …","","","","","","","","","","Attempt to reset any settings to before this modifier was …","Attempt to reset any settings to before this modifier was …","","A simple macro allowing string literals to be broken …","Separator char.","","","","Chained method to change the <code>show_other_months</code> of a …","Defines whether to show the days from another month, if the","Chained method to change the <code>show_title</code> of a <code>CalendarMonth</code> …","Defines whether the weekday initials like …","","","","","Original <code>String</code> that generated this instance.","A chained function to set <code>Lines::spacing</code> on an instance.","Defines the <code>Weekday</code> that a week begins in.","Chained method to change the <code>week_starts_with</code> of a …","A chained function to set <code>Lines::title</code> on an instance.","","A chained function to set <code>Lines::title_modifier</code> on an …","Modifier for the title row.","A chained function to set <code>Lines::title_prefix</code> on an …","","","","","","","","","","","","","","","","","","","Modifier for today, if present within the month. This …","","","","","","","","","Try parsing an <code>ANSIEscapeCode</code> from a [<code>regex::Captures</code>].","","","","","","","","","","","","","","Use ANSIEscapeCode to parse the str first, then select …","","Global Implementation for all the base enums, which …","","","","","","","Use ANSIEscapeCode to parse the str first, then select …","Global Implementation for all the base enums, which …","","","Global Implementation for all the base enums, which …","Use ANSIEscapeCode to parse the str first, then select …","","","","","Use ANSIEscapeCode to parse the str first, then select …","","Global Implementation for all the base enums, which …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Replace the seperator in this instance.","The <code>Weekday</code> to starts each week with. Each region can set …","Modifier for any undecorated weekdays within the month.","","Enclose the text with the modifier.","Enclose the text with the modifier.","Enclose the text with the modifier.","Enclose the text with the modifier.","Enclose the text with the modifier.","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","Calculate Easter Sunday date of a given year.","An Enum for ANSI 256-colour codes.","","","","","","","","","","","","","","","","","","","","","","","","","An Enum for ANSI 256-colour codes.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Intensity modifier","","Custom Trait for anything that can be converted into …","","","","","Unified <code>Modifier</code> enum type.","A enum of possible error types during modifier operationsrait for anything that has a resetter method.","Auto trait for structs and enums that can wrap a string.","","","","","","","","","","","","","","State Struct representing he Region of England, part of …","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","List all the Bank Holidays in England for a given year.","Defines that England starts a week on Monday.","","",""],"i":[0,15,0,2,0,33,33,6,7,6,7,8,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,0,0,2,0,2,0,6,7,0,0,0,0,0,0,15,0,0,8,0,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,0,0,0,0,2,0,0,0,0,15,0,0,6,7,33,33,0,0,0,0,2,0,0,8,2,15,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,0,6,7,0,6,7,0,15,0,0,0,33,33,33,15,33,33,33,6,7,6,7,2,2,2,3,0,2,9,11,18,54,20,21,3,33,40,35,2,38,12,22,23,6,25,26,27,13,7,14,8,15,16,9,11,18,54,20,21,3,33,40,35,2,38,12,22,23,6,25,26,27,13,7,14,8,15,16,6,7,8,9,9,11,2,12,6,13,7,14,8,15,16,11,2,12,6,13,7,14,8,15,16,3,2,0,55,9,9,9,9,2,6,7,8,18,20,21,22,23,25,26,27,6,7,8,2,3,3,2,6,7,8,15,11,11,11,11,3,3,33,33,2,2,6,6,7,7,8,8,15,15,9,11,11,11,11,18,54,20,21,3,3,33,40,35,2,38,12,22,23,6,25,26,27,13,7,14,8,15,16,11,0,9,35,35,2,9,11,18,54,20,21,3,33,40,35,2,38,12,22,23,6,25,26,27,13,7,14,8,15,16,56,6,7,8,15,40,38,12,13,14,16,57,6,7,8,15,6,7,58,59,59,2,60,58,3,2,12,6,13,7,14,8,15,16,61,11,62,54,63,11,3,9,9,9,9,9,9,11,3,40,35,38,40,38,38,12,13,14,16,12,13,14,16,40,64,12,13,14,16,2,9,3,11,0,33,35,35,0,2,65,2,6,7,8,15,2,0,3,6,7,8,9,9,9,9,12,13,14,16,3,11,63,9,11,11,11,9,11,11,2,12,6,13,7,14,8,15,16,11,3,33,2,6,7,8,15,9,9,11,18,54,20,21,3,3,3,33,40,35,2,2,2,2,38,12,22,23,6,6,6,6,6,25,26,27,13,7,7,7,7,7,14,8,8,8,8,8,15,15,15,15,16,9,11,18,54,20,21,3,33,40,35,2,38,12,22,23,6,25,26,27,13,7,14,8,15,16,9,11,18,54,20,21,3,33,40,35,2,38,12,22,23,6,25,26,27,13,7,14,8,15,16,2,3,9,9,66,2,6,7,8,15,0,0,0,51,52,53,51,52,53,51,52,53,51,52,53,51,52,53,51,52,53,51,52,53,51,52,53,0,0,2,33,33,6,7,6,7,8,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,0,2,2,6,7,8,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,0,2,0,6,7,33,33,0,0,2,8,2,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,6,7,0,0,33,33,33,33,33,33,6,7,6,7,56,65,66,0,67,67,67,67,67,67,67,67,67],"fp":[[15,"i32"],[4,"Modifier"],[3,"ANSIEscapeCode"],[15,"str"],[4,"Option"],[4,"Colour"],[4,"Background"],[4,"Intensity"],[3,"CalendarMonth"],[15,"bool"],[3,"Lines"],[3,"ColourIter"],[3,"BackgroundIter"],[3,"IntensityIter"],[4,"MoveCursor"],[3,"MoveCursorIter"],[3,"NaiveDate"],[3,"ESCAPE_CODE_PATTERN"],[3,"Regex"],[3,"ESCAPE_CODE_START_PATTERN"],[3,"SEP_PATTERN"],[3,"DEFAULT_TITLE_MODIFIER"],[3,"DEFAULT_WEEK_STARTS_WITH"],[4,"Weekday"],[3,"DEFAULT_WEEKDAY_MODIFIER"],[3,"DEFAULT_HOLIDAY_MODIFIER"],[3,"DEFAULT_OTHER_MONTH_MODIFIER"],[4,"Result"],[3,"Global"],[3,"Vec"],[3,"Formatter"],[3,"Error"],[4,"ModifierError"],[15,"u16"],[3,"RangeWithoutModifiers"],[15,"usize"],[3,"Duration"],[3,"StepsOverRange"],[8,"Iterator"],[3,"ModifiersInText"],[15,"u32"],[3,"String"],[15,"char"],[3,"Range"],[3,"RangeInclusive"],[3,"Match"],[3,"Captures"],[3,"Demand"],[15,"u8"],[3,"TypeId"],[3,"SUNDAYS"],[3,"WEEKENDS"],[3,"WEEKDAYS"],[3,"Holidays"],[8,"ContainsDate"],[8,"IntoANSIEscapeCode"],[8,"IterRangeByDuration"],[8,"FindModifiers"],[8,"LastWeekdayOfMonth"],[8,"HasLength"],[8,"LengthWithoutModifiers"],[8,"HolidayList"],[8,"RegionMarker"],[8,"NextWeekdayFromDate"],[8,"Resetter"],[8,"StringWrapper"],[3,"England"]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
